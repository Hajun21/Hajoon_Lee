// 08 문자열 저장(배열)

// 단일문자 : 'a'
// 문자열 : "hello" ->	h e l l o 0	(6byte 필요 : null 문자)
// 중요!! : 문자열은 마지막에 NULL문자 (\0)를 반드시 포함
// 배열 : 같은 자료형으로 연속적인 공간 형성
// char arr [3] -> char 크기를 요소로 3칸짜리 공간을 형성

//#include <stdio.h>
//int main()
//{
//	char str1[10] = "hello";
//	char str2[12] = "hello world";
//	char str3[3] = "가";			//한글은 글자당 2바이트씩 잡는다. 영어를 제외한 언어
//	printf("%s\n", str1);
//	printf("%s\n", str2);
//	printf("%s\n", str3);
//}

// 이름(자료형 char name[10]) : 홍길동
// 나이(int age) : 44
// 성별(char gender) : 'M'
// 주소(char addr [100]) : 대구광역시 달서구
// 각각 자료형과 변수/배열명을 참고해서
// Data 값을 저장 한 이후에 서식문자 잘 고려해서 printf()
//하세요
//#include <stdio.h>
//int main()
//{
//	char name[10] = "홍길동";
//	int age = '44';  //char age = '44'; 오답   //[10] 왜 없는
//	char gender = 'M'; //' '  "  "
//	char addr[100] = "대구광역시 달서구";
//	printf("1. 이름 : ");           
//	printf("%s\n", name);
//	printf("2. 나이 : ");
//	printf("%d\n", age); 
//	printf("3. 성별 : ");
//	printf("%c\n", gender);
//	printf("4. 주소 : ");
//	printf("%s\n", addr);
//}

// (자료)형변환
// 자동형 변환(암시적형변환) : 컴파일러에 의해 자동형 변환 (컴파일러 : 컴퓨터, 운영체제)
// 강제형 변환(명시적형변환) : 프로그래머에 의한 강제형 변환

// 01 자료형변환
// 자료형 변환시 데이터 손실가능성이 낮을 때 컴파일러(C언어 프로그램)에 의해 자동으로 형변환이 된다.
// ex) 큰공간 = 작은 값

// 자동형변환 순서
// char < short < int < long < long long < float < double

//#include <stdio.h>
//int main()
//{
//	short svar = 10;
//	int ivar = svar;   // 자동형변환(큰공간 = 작은 값)
//	printf("ivar = %d\n ", ivar);
//
//	char cvar = 'a';
//	ivar = cvar;		//
//	printf("ivar = %c\n ", ivar);
//	
//	long long lvar = ivar;  //  자동형변환
//	printf("ivar = %d\n ", ivar);
//
//	float fvar = ivar;
//	printf("ivar = %f\n ", ivar);           // 다시
//
//	double dvar = lvar;
//	printf("ivar = %f\n ", ivar);
//}
//
// 02 강제형변환
// 프로그래머에 의해 특정한 자료형으로 강제형변환 하는 경우
//#include <stdio.h>
//int main()
//{
//	// int : 약 21, short : 32000
//	int ivar = 50000;
//	short svar = (short)ivar;
//	char cvar = (char)ivar;
//
//	printf("svar = %d\n", svar);
//	printf("cvar = %d\n", cvar);
//}

// 03 연산시 자동(강제)형변환(나눗셈)
//
//#include <stdio.h>
//int main()
//{
//	int num = 10;
//	int div = 4;
//	double r1 = num / div;
//	double r2 = (float)num / div;
//
//	printf("r1 = %f\n", r1);
//	printf("r2 = %f\n", r2);
//}

// 01 정수값 받기
#include <stdio.h>
//int main()
//{
//	int n1 = 0;
//	printf("정수 1 입력 : ");                                    //프로그램 확인
//	scanf_s("%d", &n1);
//	// scanf_s : 표준입력장치(키보드)로부터 프로그램 방향으로 값을 받을 때 사용
//	// "%d" : 정수서식에 맞게 값을 받겠다.
//	// &(참조연산자) : 공간의 주소값을 반환
//	printf("입력한 값 : %d\n", n1);
//}

//int main()
//{
//	int n1 = 0;
//	int n2 = 0;
//	printf("정수 2개 입력 : ");
//	printf("%d%d", &n1, &n2);							//값은 스페이스바 혹은 엔터키를 기준으로 확인  //확인
//	printf("n1 = %d, n2 = %d\n", n1, n2);
//}

// 문제
// 정수 3개를 한번에 받아서 세수의 합 / 곱 / 차를 출력해보세요   //문제확인

// 03 scanf_s 서식문자 따른 값 받기

// %d : 10진 정수
// %f : 실수(float) 형
// %lf : double형 서식
// %c : 문자 서식
// %s : 문자열 서식

//int main()
//{
//	int n1;
//	double n2;
//	char ch;
//
//	printf("정수 입력 :");
//	scanf_s("%d", &n1);
//	printf("저장된 정수 :");
//
//	printf("실수 입력 :");
//	scanf_s("%lf", &n2);
//	printf("저장된 실수 :", "%lf\n", n2);
//
//	printf("문자 입력 :");
//	scanf_s("%c", &ch);
//	printf("저장된 문자 :", "%c\n", ch);
//
//	// scanf를 반복적으로 사용할 때 숫자 값 입력과 문잣값 입력 사이에 rewind(stdin)을 이용해서
//	// 버퍼공간을 초기화시켜주지 않으면 버퍼공간에 남아있는 문자 or 문자열 값이  다음 scanf의 입력된 값으로 해석되기 때문에 문제가 발생한다.
//
//	rewind(stdin);                     //확인
//	printf
//}

// 04 문자열 받기
//int main()
//{
//	char gender;
//	char name[20];
//
//	printf("성별(M/W) : ");
//	scanf_s("%c", &gender, sizeof(gender));
//	printf("이름 : ");
//	scanf_s("%s", &name, sizeof(name));		// 배열은 &가 생략될 수 있다. (포인터 파트에서 설명)

//
//	printf("이름 : %s\n, 성별 : %c\n", name, gender);
//	
//}

// 문제
// 국어, 영어, 수학 점수를 받아 합계와 평균을 출력하세요
// 예
// 국영수 입력 : 100 90 80
// 총점 : 270
// 평균 : 90.0
// 평균점수는 소수점 이하 2자리까지 출력합니다
// 나눗셈 과정에서 소수점이하 값이 유지되도록 강제 형변환 처리합니다.

//int main()         //확인
//{
//	int n1, n2, n3;
//	printf("국, 수 ,영 순서대로 점수 입력 >>>");
//	scanf_s("%d%d%d", &n1, &n2, &n3);
//	printf("총점 ")
//}

// 문제
// 다음과 같이 출력과 입력을 반복해보세요.
// 당신의 이름은 무엇입니까? ㅇㅇㅇ
// ㅇㅇㅇ 님의 나이는 몇살입니까? 50
// ㅇㅇㅇ 님의 나이는 50 살입니다.

// -> 여기서 홍길동, 50은 고정된 값이 아니라 키보드로 입력값을 받는 변수입니다.
// -> 다른 값으로도 바뀔 수 있기 때문에 두번째 라인에서는 입력받은 이름이 출력될 수 있도록 처리해야 됩니다.

//int main()            //문제
//
//{
//	char name[20];
//	char age;
//	printf("당신의 이름은 무엇입니까?");
//	scanf_s("%s", &name, sizeof(name));
//	printf("%s님의 나이는 몇살입니까?", name);
//	scanf_s("%d", &age, sizeof(age));
//	printf("%s님의 나이는 %d 입니다.", name, age);
//}

// 01 산술연산자(+, - , *, / , %)
//#include <stdio.h>
//int main()
//{
//	int a = 10, b = 20, c = 0;
//	printf("a + b = %d\n", a + b);
//	printf("a - b = %d\n", a - b);
//	printf("a * b = %d\n", a * b);		// 곱하기
//	printf("a / b = %d\n", a / b);		// 나눈 후의 몫을 구한다.
//	printf("a % b = %d\n", a % b);		// 나눈 후의 나머지를 구한다.  나머지 / 몫 X
//}

// 02 복합대입연산(+=, -=, *=, /*, %=)

//#include <stdio.h>
//int main()
//{
//	int a = 10, b = 20, c = 0;
//	a += b; // a = a + b
//	printf("a = %d\n", a);
//	a -= b; // a = a - b
//	printf("a = %d\n", a);
//	a *= b; // a = a * b
//	printf("a = %d\n", a);        //비교
//}

// 03 비교연산자
// 참 : 0이 아닌 모든 값(대표값 : 1)
// 거짓 : 0
//int main()
//{
//	int a = 10, b = 20, c = 0;
//	printf("a == b ? %d\n", a == b);   // == : 같은가?
//	printf("a > b ? %d\n", a > b);
//	printf("a >= b ? %d\n", a >= b);	// >= : 크거나 같은가?
//	printf("a < b ? %d\n", a < b);
//	printf("a <= b ? %d\n", a <= b);             //참과 거짓?
//	printf("a != b ? %d\n", a != b);		// ! = : 다른가? (not  연산자)
//}

// 04 논리연산자

#include <stdio.h>
//int main()
//{
//	// AND 연산자(&&)
//	// 1. 왼쪽의 조건식이 거짓이면 오른쪽 조건식을 평가하지 않는다.
//	// 2. "&&" 연산자는 일반적으로 "II" 연산자보다 우선순위가 높다.
//	// 3. "&&" 연산자의 결과는 논리값(참 또는 거짓) 이다.
//
////	int a = 10, b = 20;
////	printf("a > 10 && a > 20 ? %d\n", a > 10 && a > 20);
////	printf("a < 11 && a < 20 ? %d\n", a < 11 && a < 20);
////}
////
// OR 연산자( II )
////int a = 5, b = 9, c = 0;
////printf("a == b II a < b ? %d\n", a == b II a < b);
////printf("a == b II a < b ? %d\n", a > b II a >b);       //확인 II
//
//// NOT 연산자( ! )
//	printf("!참 ? %d\n", !10);		// 참이라면 거짓이 된다.
//	printf("!거짓 ? %\n", !0);		// 거짓이라면 참이 뜬다.            // 검색
//}

////문제 숙제
//int main()
//{
//	int a = 0, b = 0, c = 0;
//	// 키보드로 각각 정수값을 입력받아 a,b,c변수에 저장한다.
//	// 각 문잔을 보면서 문장에 맞게 적절히 and, or 연산자 기호를 써서 출력합니다.
//	// 1) a가 b와 같고 a는 10보다 크고 b도 10보다 큰지 출력(출력 결과는 0 or 1)
//	// 2) a가 b보다 크면서 a가 0이 아닌지 확인하여 출력(출력 결과는 0 or 1)
//	// 3) a가 5보다 크거나 b가 10보다 작은지 확인하여 출력(출력 결과는 0 or 1)
//	// 4) a가 b보다 크고 a가 c보다 크고 a가 0이 아닌지 확인하여 출력
//}
